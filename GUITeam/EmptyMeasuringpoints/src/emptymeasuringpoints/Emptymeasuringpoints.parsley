import emptymeasuringpoints.EmptymeasuringpointsSaveableTreeView
import org.eclipse.emf.common.util.URI
import org.palladiosimulator.edp2.models.measuringpoint.MeasuringpointFactory
import org.eclipse.emf.parsley.edit.ui.provider.ViewerContentProvider
import org.palladiosimulator.edp2.models.measuringpoint.MeasuringPointRepository
import org.palladiosimulator.edp2.models.measuringpoint.MeasuringPoint
import org.eclipse.swt.internal.win32.MEASUREITEMSTRUCT
import org.palladiosimulator.edp2.models.measuringpoint.impl.MeasuringPointRepositoryImpl
import java.util.ArrayList
import org.palladiosimulator.edp2.models.measuringpoint.StringMeasuringPoint
import org.eclipse.jface.viewers.IContentProvider

/* emptymeasuringpoints EMF Parsley Dsl Module file */
module emptymeasuringpoints {
	
	parts {
		viewpart emptymeasuringpoints {
			viewname "Emptymeasuringpoints"
			viewclass EmptymeasuringpointsSaveableTreeView
		}
	}
	
	configurator {
		resourceURI {
			EmptymeasuringpointsSaveableTreeView -> {
				//TODO Link zu deinem MeasuringpointRepository. Gleich wie beim mpview wird der Code hier nicht für den E4 Plugin Code benötigt, sondern lediglich
				//für den einzelnen Parsleyview "Emptymeasuringpoints"
				return URI.createFileURI("D:/Benutzer/David/Dokumente/Uni/EnPro/runtime-EclipseApplication/Pets.com/PetsMeasuringPoint.measuringpoint")
			}
		}
	} 
	
	resourceManager {
		initializeResource {
			it.getContents += MeasuringpointFactory.eINSTANCE
		}
	}
	
	viewerContentProvider {
		//Hier hätte ich gerne, dass das MeasuringpointRepository nicht im Baum angezeigt wird.
		//Scheint leider nicht zu funktionieren, tatsächlich wird die zugehörige Methode "elements" in
		//EmptymeasuringpointsViewerContentProvider nie aufgerufen. 
		elements {
			MeasuringPointRepository mpf -> mpf.measuringPoints
		}
		children {
			
		}
	}
}
